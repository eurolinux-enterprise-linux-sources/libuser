diff -ur libuser/modules/ldap.c libuser-0.56.13/modules/ldap.c
--- libuser/modules/ldap.c	2012-02-13 11:38:21.966353667 +0100
+++ libuser-0.56.13/modules/ldap.c	2012-02-13 11:42:03.347510538 +0100
@@ -1046,6 +1046,7 @@
 		    && lu_ent_get(ent, LU_COMMONNAME) == NULL) {
 			char *cn;
 
+			cn = NULL;
 			vals = lu_ent_get(ent, LU_GECOS);
 			if (vals != NULL) {
 				char *p;
@@ -1055,7 +1056,11 @@
 				p = strchr(cn, ',');
 				if (p != NULL)
 					*p = 0;
-			} else {
+				/* Note that gecos may be empty, but
+				   commonName (as a DirectoryString) is not
+				   allowed to be empty. */
+			}
+			if (cn == NULL || *cn == 0) {
 				vals = lu_ent_get(ent, LU_USERNAME);
 				/* Guaranteed by lu_ldap_set() */
 				g_assert (vals != NULL);
diff -ur libuser/tests/ldap_test.py libuser-0.56.13/tests/ldap_test.py
--- libuser/tests/ldap_test.py	2012-02-13 11:38:21.967353663 +0100
+++ libuser-0.56.13/tests/ldap_test.py	2012-02-13 11:42:03.348510534 +0100
@@ -169,6 +169,39 @@
         e = self.a.initUser('user6_6')
         self.assertRaises(RuntimeError, self.a.addUser, e, False, False)
 
+    def testUserAdd7(self):
+        # Adding commonName if it is not defined:
+        # - Explicitly set
+        e = self.a.initUser('user6_7')
+        e[libuser.COMMONNAME] = 'Common Name'
+        self.a.addUser(e, False, False)
+        del e
+        e = self.a.lookupUserByName('user6_7')
+        self.assertEqual(e[libuser.COMMONNAME], ['Common Name'])
+        # - Defaulted from GECOS
+        e = self.a.initUser('user6_8')
+        e[libuser.GECOS] = 'Full Name,Office,1234,4321'
+        self.a.addUser(e, False, False)
+        del e
+        e = self.a.lookupUserByName('user6_8')
+        self.assertEqual(e[libuser.COMMONNAME], ['Full Name'])
+        # Defaulted from user name
+        e = self.a.initUser('user6_9')
+        self.assertEqual(e[libuser.GECOS], ['user6_9'])
+        e.clear(libuser.GECOS)
+        self.assertRaises(KeyError, lambda x: x[libuser.GECOS], e)
+        self.a.addUser(e, False, False)
+        del e
+        e = self.a.lookupUserByName('user6_9')
+        self.assertEqual(e[libuser.COMMONNAME], ['user6_9'])
+        # Defaulted from user name if GECOS is empty
+        e = self.a.initUser('user6_10')
+        e[libuser.GECOS] = ''
+        self.a.addUser(e, False, False)
+        del e
+        e = self.a.lookupUserByName('user6_10')
+        self.assertEqual(e[libuser.COMMONNAME], ['user6_10'])
+
     def testUserMod1(self):
         # A minimal case
         e = self.a.initUser('user7_1')
